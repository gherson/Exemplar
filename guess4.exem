"""
guess4. Adapted from http://inventwithpython.com/invent4thed/chapter3.html 2/1/2019

This shows how user interaction and program calls can be modelled.
"""

# User wins.
>Hello! What is your name?
<Albert
name==i1         # simple assignment (SA)
>secret = random.randint(1,20)  # This just gets printed currently.
<4  
secret==i1       # This & above line become: secret = int(input("secret:"))  # Eg, 4
>Well, Albert, I am thinking of a number between 1 and 20.
guess_count==0   # iteration
>Take a guess.
<10
guess==i1, guess>secret  # SA, selection
>Your guess is too high.
guess_count == 1 # iteration
>Take a guess.
<2
guess==i1, guess<secret  # SA, selection
>Your guess is too low.
guess_count==2   # iteration
>Take a guess.
<4
guess==i1, guess==secret  # SA, selection
guess_count + 1 == 3  # The 3 here needed for below 3 to get swapped for a variable.
>Good job, Albert! You guessed my number in 3 guesses!


# User loses.
>Hello! What is your name?
<John
name==i1
>secret = random.randint(1,20)
<3
secret==i1
>Well, John, I am thinking of a number between 1 and 20.
guess_count==0
>Take a guess.
<11
guess==i1, guess>secret
>Your guess is too high.
guess_count == 1
>Take a guess.
<1
guess==i1, guess<secret
>Your guess is too low.
guess_count==2
>Take a guess.
<2
guess==i1, guess<secret
>Your guess is too low.
guess_count==3
>Take a guess.
<10
guess==i1, guess>secret
>Your guess is too high.
guess_count==4
>Take a guess.
<9
guess==i1, guess>secret
>Your guess is too high.
guess_count==5
>Take a guess.
<8
guess==i1, guess>secret
>Your guess is too high.
guess_count >= 5  # User avoids guess_count == 5, as that'd look like another iteration.
>Nope. The number I was thinking of was 3.
