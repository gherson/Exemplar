# AUTOGENERATED FILE -- RENAME OR YOUR EDITS WILL BE OVERWRITTEN
import unittest
import exemplar
out_trace = ''
in_trace = []


# print() is redefined to recreate a clean .exem in out_trace (stripped of comments).
def print(line: str = "") -> None:
    global out_trace
    out_trace += ">" + line + '\n'


# input() is redefined to recreate a clean .exem in out_trace (stripped of comments).
def input(line: str = "") -> str:
    global out_trace, in_trace
    value = in_trace.pop(0)
    out_trace += "<" + value + '\n'  # Eg, '<Albert\n'
    return value


<function under test>


<class signature>

    global out_trace, in_trace

    def setUp(self):
        global out_trace
        out_trace = ''

    # Return the named exem (stripped of comments).
    @staticmethod
    def get_expected(exem: str) -> str:
        out_exem_lines = []
        for line in exemplar.clean(exemplar.from_file(exem)):
            if line.startswith('<') or line.startswith('>'):
                out_exem_lines.append(line)
        return '\n'.join(out_exem_lines) + '\n'

