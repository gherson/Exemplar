# This is an easier lift than guess4 because it combines the latter's 2 examples (to see if E
should solve guess4 in similar fashion). 5/4/2019
# Adapted from http://inventwithpython.com/invent4thed/chapter3.html 2/1/2019

# Example 0: User wins.
user_loses == 0
>Hello! What is your name?
<Albert
name==i1         # simple assignment (SA)
<4
secret==i1       # SA
>Well, Albert, I am thinking of a number between 1 and 20.
guess_count==0   # iteration
>Take a guess.
<10
guess==i1, guess>secret  # SA, selection
>Your guess is too high.
guess_count == 1 # iteration
>Take a guess.
<2
guess==i1, guess<secret  # SA, selection
>Your guess is too low.
guess_count==2   # iteration
>Take a guess.
<4
guess==i1, guess==secret  # SA, selection
guess_count + 1 == 3  # SA
>Good job, Albert! You guessed my number in 3 guesses!
#
# Example 1: User loses.
user_loses == 1
>Hello! What is your name?
<John
name==i1
<3
secret==i1
>Well, John, I am thinking of a number between 1 and 20.
guess_count==0
>Take a guess.
<11
guess==i1, guess>secret
>Your guess is too high.
guess_count == 1
>Take a guess.
<1
guess==i1, guess<secret
>Your guess is too low.
guess_count==2
>Take a guess.
<2
guess==i1, guess<secret
>Your guess is too low.
guess_count==3
>Take a guess.
<10
guess==i1, guess>secret
>Your guess is too high.
guess_count==4
>Take a guess.
<9
guess==i1, guess>secret
>Your guess is too high.
guess_count==5
>Take a guess.
<8
guess==i1, guess>secret
>Your guess is too high.
guess_count >= 5  
>Nope. The number I was thinking of was 3.

